exports.up = async (knex) => {
  await knex.schema
    .createTable('users', (users) => {
      users.increments('user_id')
      users.string('username', 200).notNullable()
      users.string('password', 200).notNullable()
      users.string('email', 200).notNullable()
      users.string('user_first_name', 200).notNullable()
      users.string('user_last_name', 200).notNullable()
      users.timestamps(false, true)
    })
    .createTable('workspaces', (table) => {
      table.increments('workspace_id')
      table.string('workspace_name', 200).notNullable()
      table.string('workspace_description', 400).notNullable()
      table.string('workspace_location', 300).notNullable()
      table.integer('workspace_price', 300).notNullable()
    })
    .createTable('capacity', (table) => {
      table.increments('capacity_id')
      table.string('capacity_number', 200).notNullable()
    })
    .createTable('types', (table) => {
      table.increments('type_id')
      table.string('type_name', 200).notNullable()
    })
    .createTable('images', table => {
      table.increments('image_id')
      table.string('image_content', 300).notNullable()
      table.string('image_description', 200)
      table.integer('workspace_id')
          .unsigned()
          .notNullable()
          .references('workspace_id')
          .inTable('workspaces')
          .onDelete('CASCADE')
          .onUpdate('CASCADE')
    })
    .createTable('workspace_capacity', table => {
      table.increments('workspace_capacity_id')
      table.integer('workspace_id')
          .unsigned()
          .notNullable()
          .references('workspace_id')
          .inTable('workspaces')
          .onDelete('CASCADE')
          .onUpdate('CASCADE')
      table.integer('capacity_id')
          .unsigned()
          .notNullable()
          .references('capacity_id')
          .inTable('capacity')
          .onDelete('CASCADE')
          .onUpdate('CASCADE')
    })
    .createTable('workspace_type', table => {
      table.increments('workspace_type_id')
      table.integer('workspace_id')
          .unsigned()
          .notNullable()
          .references('workspace_id')
          .inTable('workspaces')
          .onDelete('CASCADE')
          .onUpdate('CASCADE')
      table.integer('type_id')
          .unsigned()
          .notNullable()
          .references('type_id')
          .inTable('types')
          .onDelete('CASCADE')
          .onUpdate('CASCADE')
    })

}

exports.down = async (knex) => {
  await knex.schema
  .dropTableIfExists('workspace_type')
  .dropTableIfExists('workspace_capacity')
  .dropTableIfExists('images')
  .dropTableIfExists('types')
  .dropTableIfExists('capacity')
  .dropTableIfExists('workspaces')
  .dropTableIfExists('users')
}
